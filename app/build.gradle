apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.pedidosyachallenge"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "google_maps_key", (project.findProperty("google_maps_api_key") ?: "")
    }
    buildTypes {
        debug {
            buildConfigField 'String', "ClientId", client_id
            buildConfigField 'String', "ClientSecret", client_secret
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "ClientId", client_id
            buildConfigField 'String', "ClientSecret", client_secret
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha08'

    // LiveData & ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:3.14.2"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    compileOnly "org.glassfish:javax.annotation:3.1.1"

    // GMS Play Services
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "com.google.android.gms:play-services-location:17.0.0"

    // Glide
    implementation("com.github.bumptech.glide:glide:4.9.0") {
        exclude group: "com.android.support"
    }
    implementation "com.android.support:support-fragment:28.1.0"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.arch.core:core-testing:2.0.1'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.3'

    // Mockito
    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    // PowerMock
    testImplementation 'org.powermock:powermock-core:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0-beta.5'

}
